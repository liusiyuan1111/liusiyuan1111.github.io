<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>GitHub+Hexo搭建个人博客</title>
      <link href="2020/01/11/GitHub+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>2020/01/11/GitHub+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="GitHub-Hexo搭建个人博客"><a href="#GitHub-Hexo搭建个人博客" class="headerlink" title="GitHub+Hexo搭建个人博客"></a>GitHub+Hexo搭建个人博客</h2><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=863073353&auto=1&height=66"></iframe><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p>这里我把个人博客托管在 GitHub Pages 上。GitHub Pages 是一种静态站点托管服务，每个 GitHub 帐户或组织都可以有一个站点。</p><h2 id="Github-Pages上创建博客"><a href="#Github-Pages上创建博客" class="headerlink" title="Github Pages上创建博客"></a>Github Pages上创建博客</h2><h3 id="GitHub创建仓库"><a href="#GitHub创建仓库" class="headerlink" title="GitHub创建仓库"></a>GitHub创建仓库</h3><p>新建一个名为 用户名.github.io的仓库，比如我的GitHub用户名为<code>liusiyuan1111</code> ，那么就新建一个 <code>liusiyuan1111.github.io</code> 的仓库，这样我的网站访问地址就是 <a href="https://liusiyuan1111.github.io/">https://liusiyuan1111.github.io</a> 。</p><p>创建成功后，打开网址，此时显示404</p><p><img src="https://i.loli.net/2021/01/11/RlYJ6xDaZyp8grt.png" alt="image-20210111205132097"></p><h3 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h3><p>安装Hexo前需要有Node.Js的环境，安装步骤省略</p><p>Node.js 安装包及源码下载地址为：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p><p>有了nodejs的环境后，就可以安装hexo</p><pre class="line-numbers language-none"><code class="language-none">npm install -g hexo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Hexo初始化"><a href="#Hexo初始化" class="headerlink" title="Hexo初始化"></a>Hexo初始化</h3><p>在想要的路径下新建一个文件夹，比如我的是D:\hexo ，这个文件夹内就是你的Hexo博客的源文件，在这个文件夹下右键单击鼠标，点击 Git Bash Here，依次输入以下 npm 命令即可初始化。</p><pre class="line-numbers language-none"><code class="language-none">hexo initnpm install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>输入以上命令后，hexo 会自动下载一些文件到这个目录，包括 <code>node_modules</code>，其中比较重要的几个文件的目录结构如下：</p><pre class="line-numbers language-none"><code class="language-none">.├── _config.yml├── package.json├── scaffolds├── source|   ├── _drafts|   └── _posts└── themes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：hexo 有 2 个<code>_config.yml</code> 文件，一个是站点根目录下的<code>_config.yml</code>，一个是 theme（主题）下的<code>_config.yml</code> 文件。</p><p>博客生成、预览：</p><pre class="line-numbers language-none"><code class="language-none">hexo g # 生成hexo s # 启动服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>执行以上命令之后，hexo 就会在 public 文件夹生成相关 html 文件，这些就是你博客的静态文件，后续需要把这些提交到 GitHub 上。</p><p><code>hexo s</code> 是开启本地预览服务，打开浏览器访问 <code>http://localhost:4000</code> 即可看到内容，很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故。</p><p><img src="https://i.loli.net/2021/01/11/di1oyQeEmbC5gRA.png" alt="image-20210111215225751"></p><p><img src="https://i.loli.net/2021/01/11/GwLBhxZ1f4Jgei8.png" alt="image-20210111215142547"></p><p>按ctrl+c关闭本地服务器。</p><p><strong>我们以后常用到的Hexo命令：</strong></p><ul><li>hexo s等价于 hexo server #Hexo 会监视文件变动并自动更新，除修改站点配置文件外,无须重启服务器,直接刷新网页即可生效。</li><li>hexo g 等价于 hexo generate #生成静态网页 (执行 $ hexo g后会在站点根目录下生成public文件夹, hexo会将”/blog/source/“ 下面的.md后缀的文件编译为.html后缀的文件,存放在”/blog/public/ “ 路径下)</li><li>hexo d 等价于 hexo deploy #将本地数据部署到远端服务器(如github)</li><li>hexo clean #清除缓存 ,网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的public文件夹</li></ul><h2 id="链接Github与本地"><a href="#链接Github与本地" class="headerlink" title="链接Github与本地"></a>链接Github与本地</h2><h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h3><p>右键单击鼠标，点击 Git Bash Here输入以下命令：</p><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;Name&quot;git config --global user.email &quot;Email&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>Name和Email是我们注册Github时的用户名和邮箱。</strong></p><p>然后生成密钥：</p><pre class="line-numbers language-none"><code class="language-none">ssh-keygen -t rsa -C &quot;Email&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>Email是我们注册Github时的邮箱</strong></p><p>然后会出现：</p><pre class="line-numbers language-none"><code class="language-none">Generating public&#x2F;private rsa key pair.Enter file in which to save the key (&#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa):&#x2F;&#x2F;到这里可以直接回车将密钥按默认文件进行存储<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>回车之后：</p><pre class="line-numbers language-none"><code class="language-none">Enter passphrase (empty for no passphrase):&#x2F;&#x2F;这里是要你输入密码，其实不需要输什么密码，直接回车就行Enter same passphrase again:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>接下来会有：</p><pre class="line-numbers language-none"><code class="language-none">Your identification has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.Your public key has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.pub.The key fingerprint is:这里是各种字母数字组成的字符串，结尾是你的邮箱The key&#39;s randomart image is:这里也是各种字母数字符号组成的字符串<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在密钥已经生成，一般存放在（/c/Users/you/.ssh/id_rsa.pub.），我们运行下面的命令将密钥复制为粘贴板：</p><pre class="line-numbers language-none"><code class="language-none">clip &lt; ~&#x2F;.ssh&#x2F;id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2021/01/11/FGz8qAbODEsSfti.png" alt="image-20210111212538215"></p><h2 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h2><p>在Github头像下面点击Settings，再点击SSH and GPG keys，新建一个SSH，名字任意。</p><p>然后将刚才复制的密钥添加就可以了，像这样：</p><p><img src="https://i.loli.net/2021/01/11/JZwLOSPWeG4MpCr.png" alt="image-20210111212701304"></p><p><strong>本地连接Github</strong></p><p>右键单击鼠标，点击 Git Bash Here输入以下命令，如果如下图所示，出现你的用户名，那就成功了</p><pre class="line-numbers language-none"><code class="language-none">ssh -T git@github.com&#x2F;&#x2F;注意不要做任何修改<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2021/01/11/JYnibqIWA3ed2kx.png" alt="image-20210111212935613"></p><p>打开博客根目录下的<code>_config.yml</code>文件，这是博客的配置文件，我们需要修改一下才能连接Github。</p><p><img src="https://i.loli.net/2021/01/11/Z8PokJyKAX6v9lB.png" alt="image-20210111213124756"></p><p>修改最后一行的配置：</p><pre class="line-numbers language-none"><code class="language-none"># Deployment\## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;one-command-deploymentdeploy: type: &#39;&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>改为：</p><pre class="line-numbers language-none"><code class="language-none"># Deployment\## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;one-command-deploymentdeploy: type: &#39;git&#39; repository: git@github.com:liusiyuan1111&#x2F;liusiyuan1111.github.io.git branch: master <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：</p><ul><li><strong>repository修改为你自己的github项目地址</strong>。</li><li><strong>每一个冒号后面都有一个空格。</strong></li></ul><p>直接部署一般会报如下错误：</p><pre class="line-numbers language-none"><code class="language-none">Deployer not found: git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这是因为缺少了一个插件，我们可以通过如下命令安装：</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后输入 <code>hexo d</code> 就会将本次有改动的代码全部提交。</p><h2 id="写文章、发布文章"><a href="#写文章、发布文章" class="headerlink" title="写文章、发布文章"></a>写文章、发布文章</h2><p>打开hexo安装目录，我的是D:\Blog\source_posts ，可以发现里面有一个<code>hello-world.md</code>的文件，可以把自己写的md文件直接放进来</p><p><img src="https://i.loli.net/2021/01/11/rgTiDvU6xfYMEqz.png" alt="image-20210111220734944"></p><p>然后hexo g生成静态网页，hexo s可以本地预览效果，最后hexo d部署到GitHub即可。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 搭建博客 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2019/12/24/hello-world/"/>
      <url>2019/12/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Hello World!</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=385322&auto=1&height=66"></iframe>]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
