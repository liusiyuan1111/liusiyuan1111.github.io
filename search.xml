<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HTML5融媒体制作竞赛团队操作教程</title>
      <link href="2021/01/13/HTML5%E8%9E%8D%E5%AA%92%E4%BD%93%E5%88%B6%E4%BD%9C/"/>
      <url>2021/01/13/HTML5%E8%9E%8D%E5%AA%92%E4%BD%93%E5%88%B6%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML5融媒体制作竞赛团队操作教程"><a href="#HTML5融媒体制作竞赛团队操作教程" class="headerlink" title="HTML5融媒体制作竞赛团队操作教程"></a>HTML5融媒体制作竞赛团队操作教程</h1><p>这是一个用于广东工贸职业技术学院的软件工程系参加HTML5融媒体内容制作职业技能大赛的教程资料，主要是关于如何使用GitHub管理项目，托管代码。</p><h2 id="创建一个GitHub账号"><a href="#创建一个GitHub账号" class="headerlink" title="创建一个GitHub账号"></a>创建一个GitHub账号</h2><ol><li><p>创建账号，此步骤省略</p></li><li><p>下载一个GitHub桌面客户端，下载链接<a href="https://desktop.github.com/">GitHub Desktop | Simple collaboration from your desktop</a></p></li></ol><h2 id="clone仓库到本地"><a href="#clone仓库到本地" class="headerlink" title="clone仓库到本地"></a>clone仓库到本地</h2><ol><li><p>fork到自己的仓库</p><p><img src="https://i.loli.net/2021/01/14/moCZsLJ1MIPacKG.png" alt="image-20210114175326921"></p></li><li><p>fork之后可以在自己的Repositories中看到这个仓库</p></li><li><p>在GitHub桌面版登录自己的账号，然后把fork的仓库clone到本地</p></li></ol><p>   <img src="https://i.loli.net/2021/01/14/JxUbm9fnT3cK5Py.png" alt="image-20210114175825618"></p><ol start="4"><li><p>clone时选择第一个<code>To contribute to the parent project</code>,这样就可以pull requests到团队的仓库</p><p><img src="https://i.loli.net/2021/01/14/RkTFEKSMGAHgcPL.png" alt="image-20210114180309546"></p></li><li><p>clone之后可以在本地看到整个仓库的文件夹</p><p><img src="https://i.loli.net/2021/01/14/xQIpodYi1L8B2Rm.png" alt="image-20210114180705376"></p></li><li><p>在学生项目文件夹内，以自己的名字创建一个文件夹，然后在该文件夹内创建两个文件夹，一个是学习，用于存放平时练习的代码；另一个是项目，用来存放练习竞赛的项目代码。</p><p><img src="https://i.loli.net/2021/01/14/AuSfkMHitajzvNq.png" alt="image-20210114180834949"></p></li><li><p>创建好文件夹后，在两个文件夹内分别放入两个文档，一个用于记录学习的情况，一个用于记录项目的情况，可以使用txt格式或者doc格式，建议使用markdown格式（空文件夹无法提交到仓库，所以需要在两个文件夹里分别创建这两个文档，文档里可以不用写任何东西，之后我会告诉大家怎么写文档）</p><p><img src="https://i.loli.net/2021/01/14/EhMUVwcxz16oCup.png" alt="image-20210114181217448"></p><p><img src="https://i.loli.net/2021/01/14/Xyz82bPfnckriYF.png" alt="image-20210114181234619"></p></li><li><p>把自己写的代码分别放入这两个文件夹，然后打开GitHub桌面版，可以在Changes里看到你所做的改动，“+号”（绿色）表示你新增的内容，“-号”（红色）表示你删除的内容</p></li></ol><p>   <img src="https://i.loli.net/2021/01/14/O9Uc6BLWps3tjyv.png" alt="image-20210114181753268"></p><ol start="9"><li><p>在Summary里（必填）可以填入自己的姓名和提交时间，在Description里可以填写此次提交的简要说明（比如：完成了项目1），然后点击<code>commit to main</code></p><p><img src="https://i.loli.net/2021/01/14/1os7vka8wpHPbih.png" alt="image-20210114181828830"></p></li><li><p>然后把写好的代码，提交到原始仓库</p><p><img src="https://i.loli.net/2021/01/14/UnfkYL9XmzHBclo.png" alt="image-20210114181939936"></p></li><li><p>提交之后可以在自己的仓库看到提交的内容，但是原始仓库需要我同意合并才能看到。</p><p><img src="https://i.loli.net/2021/01/14/J8yMPUY64tR7jnb.png" alt="image-20210114182104304"></p></li><li><p>注意，把仓库clone到本地之后，只在自己创建的文件夹内操作，不要随意删除其他的内容</p></li><li><p>大家先按照这个流程练习一次，自己创建文件夹和空白文档。参赛同学必须完成，其他同学随意。</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> HTML5 </tag>
            
            <tag> 融媒体 </tag>
            
            <tag> web </tag>
            
            <tag> 前端 </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySql安装与环境配置教程</title>
      <link href="2021/01/12/MySql%E5%AE%89%E8%A3%85%E4%B8%8E%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/"/>
      <url>2021/01/12/MySql%E5%AE%89%E8%A3%85%E4%B8%8E%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="MySql安装与环境配置教程"><a href="#MySql安装与环境配置教程" class="headerlink" title="MySql安装与环境配置教程"></a>MySql安装与环境配置教程</h1><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1368756097&auto=1&height=66"></iframe><p>MySQL 是最流行的关系型数据库管理系统，在 WEB 应用方面 MySQL 是最好的 RDBMS(Relational Database Management System：关系数据库管理系统)应用软件之一。</p><p>这篇博文主要是安装与配置MySql的详细步骤。</p><h2 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h2><p>MySql有免费的版本也有收费的版本，这里选择MySql的免费版本，也就是社区版下载，链接：<a href="https://downloads.mysql.com/archives/community/">MySQL :: Download MySQL Community Server (Archived Versions)</a></p><p>点开后可以看到这个界面，Product Version选择版本，这里选择最新的8.0.21，操作系统选择windows，安装包选择第一个稳定版本。</p><p><img src="https://i.loli.net/2021/01/12/m9bgoEMwDNxdK4A.png" alt="image-20210112162635970"></p><p>下载完成后，把安装包放到放在指定位置，并解压，<strong>注意路径中不要有中文</strong></p><p><img src="https://i.loli.net/2021/01/12/3MCTHbEqSKIF4V1.png" alt="image-20210112163438586"></p><h2 id="MySql安装"><a href="#MySql安装" class="headerlink" title="MySql安装"></a>MySql安装</h2><h3 id="安装MySQL的服务"><a href="#安装MySQL的服务" class="headerlink" title="安装MySQL的服务"></a>安装MySQL的服务</h3><p>以管理员身份打开命令行，因为我这里是放在D盘，所以先进入D盘</p><p><img src="https://i.loli.net/2021/01/12/gxiDAUmMQ1uve5P.png" alt="image-20210112164459773"></p><p>然后进入mysql的bin目录</p><p><img src="https://i.loli.net/2021/01/12/PfzQ2ywYx8Spc1j.png" alt="image-20210112164554951"></p><p>然后执行安装MySQL的服务：</p><pre class="line-numbers language-none"><code class="language-none">mysqld --install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>出现Service successfully installed的提示，表示安装成功</p><h3 id="初始化MySQL"><a href="#初始化MySQL" class="headerlink" title="初始化MySQL"></a>初始化MySQL</h3><p>使用以下代码初始化MySQL，然后会产生一个随机密码，记住这个密码，以后会遇到</p><pre class="line-numbers language-none"><code class="language-none">mysqld --initialize --console<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2021/01/12/X6lL1VGJaKWygcD.jpg" alt="微信图片编辑_20210112165801"></p><h3 id="开启MySQL的服务"><a href="#开启MySQL的服务" class="headerlink" title="开启MySQL的服务"></a>开启MySQL的服务</h3><pre class="line-numbers language-none"><code class="language-none">net start mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2021/01/12/cxd4WsnElwmGB9F.png" alt="image-20210112165929472"></p><h3 id="登录验证"><a href="#登录验证" class="headerlink" title="登录验证"></a>登录验证</h3><pre class="line-numbers language-none"><code class="language-none">mysql -u root -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2021/01/12/r4wmMBPFKc5oTbX.png" alt="image-20210112170159522"></p><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><pre class="line-numbers language-none"><code class="language-none">alter user &#39;root&#39;@&#39;localhost&#39; identified by &#39;你的密码&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2021/01/12/coGptdW3NlxXMzu.png" alt="image-20210112170435900"></p><h3 id="再次登录验证密码"><a href="#再次登录验证密码" class="headerlink" title="再次登录验证密码"></a>再次登录验证密码</h3><p><img src="https://i.loli.net/2021/01/12/jqUc7yrXBzZTH9P.png" alt="image-20210112170713439"></p><h2 id="设置系统变量"><a href="#设置系统变量" class="headerlink" title="设置系统变量"></a>设置系统变量</h2><p>为了方便登录操作mysql，需要设置一个全局变量。</p><p>点击“计算机”-“属性”-“高级系统设置”-“环境变量”</p><p><img src="https://i.loli.net/2021/01/12/aW6CLhfxDwsvdXS.png" alt="image-20210112170852791"></p><p><img src="https://i.loli.net/2021/01/12/JHNaqKUwAjzl6eV.png" alt="image-20210112171441077"></p><p>把mysql变量添加到path路径变量中，点击确定，即可完成<img src="https://i.loli.net/2021/01/12/yP5jAIBSc4lEKqQ.png" alt="image-20210112172214333"></p><p>此时配置完成，当需要命令行使用mysql时，只需要打开cmd，之后输入登录sql语句即可。</p><p><img src="https://i.loli.net/2021/01/12/tycT48kWSxFjNZd.png" alt="image-20210112172502950"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 环境配置 </tag>
            
            <tag> MySql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub+Hexo搭建个人博客</title>
      <link href="2021/01/11/GitHub+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>2021/01/11/GitHub+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="GitHub-Hexo搭建个人博客"><a href="#GitHub-Hexo搭建个人博客" class="headerlink" title="GitHub+Hexo搭建个人博客"></a>GitHub+Hexo搭建个人博客</h2><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=863073353&auto=1&height=66"></iframe><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p>这里我把个人博客托管在 GitHub Pages 上。GitHub Pages 是一种静态站点托管服务，每个 GitHub 帐户或组织都可以有一个站点。</p><h2 id="Github-Pages上创建博客"><a href="#Github-Pages上创建博客" class="headerlink" title="Github Pages上创建博客"></a>Github Pages上创建博客</h2><h3 id="GitHub创建仓库"><a href="#GitHub创建仓库" class="headerlink" title="GitHub创建仓库"></a>GitHub创建仓库</h3><p>新建一个名为 用户名.github.io的仓库，比如我的GitHub用户名为<code>liusiyuan1111</code> ，那么就新建一个 <code>liusiyuan1111.github.io</code> 的仓库，这样我的网站访问地址就是 <a href="https://liusiyuan1111.github.io/">https://liusiyuan1111.github.io</a> 。</p><p>创建成功后，打开网址，此时显示404</p><p><img src="https://i.loli.net/2021/01/11/RlYJ6xDaZyp8grt.png" alt="image-20210111205132097"></p><h3 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h3><p>安装Hexo前需要有Node.Js的环境，安装步骤省略</p><p>Node.js 安装包及源码下载地址为：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p><p>有了nodejs的环境后，就可以安装hexo</p><pre class="line-numbers language-none"><code class="language-none">npm install -g hexo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Hexo初始化"><a href="#Hexo初始化" class="headerlink" title="Hexo初始化"></a>Hexo初始化</h3><p>在想要的路径下新建一个文件夹，比如我的是D:\hexo ，这个文件夹内就是你的Hexo博客的源文件，在这个文件夹下右键单击鼠标，点击 Git Bash Here，依次输入以下 npm 命令即可初始化。</p><pre class="line-numbers language-none"><code class="language-none">hexo initnpm install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>输入以上命令后，hexo 会自动下载一些文件到这个目录，包括 <code>node_modules</code>，其中比较重要的几个文件的目录结构如下：</p><pre class="line-numbers language-none"><code class="language-none">.├── _config.yml├── package.json├── scaffolds├── source|   ├── _drafts|   └── _posts└── themes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：hexo 有 2 个<code>_config.yml</code> 文件，一个是站点根目录下的<code>_config.yml</code>，一个是 theme（主题）下的<code>_config.yml</code> 文件。</p><p>博客生成、预览：</p><pre class="line-numbers language-none"><code class="language-none">hexo g # 生成hexo s # 启动服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>执行以上命令之后，hexo 就会在 public 文件夹生成相关 html 文件，这些就是你博客的静态文件，后续需要把这些提交到 GitHub 上。</p><p><code>hexo s</code> 是开启本地预览服务，打开浏览器访问 <code>http://localhost:4000</code> 即可看到内容，很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故。</p><p><img src="https://i.loli.net/2021/01/11/di1oyQeEmbC5gRA.png" alt="image-20210111215225751"></p><p><img src="https://i.loli.net/2021/01/11/GwLBhxZ1f4Jgei8.png" alt="image-20210111215142547"></p><p>按ctrl+c关闭本地服务器。</p><p><strong>我们以后常用到的Hexo命令：</strong></p><ul><li>hexo s等价于 hexo server #Hexo 会监视文件变动并自动更新，除修改站点配置文件外,无须重启服务器,直接刷新网页即可生效。</li><li>hexo g 等价于 hexo generate #生成静态网页 (执行 $ hexo g后会在站点根目录下生成public文件夹, hexo会将”/blog/source/“ 下面的.md后缀的文件编译为.html后缀的文件,存放在”/blog/public/ “ 路径下)</li><li>hexo d 等价于 hexo deploy #将本地数据部署到远端服务器(如github)</li><li>hexo clean #清除缓存 ,网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的public文件夹</li></ul><h2 id="链接Github与本地"><a href="#链接Github与本地" class="headerlink" title="链接Github与本地"></a>链接Github与本地</h2><h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h3><p>右键单击鼠标，点击 Git Bash Here输入以下命令：</p><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;Name&quot;git config --global user.email &quot;Email&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>Name和Email是我们注册Github时的用户名和邮箱。</strong></p><p>然后生成密钥：</p><pre class="line-numbers language-none"><code class="language-none">ssh-keygen -t rsa -C &quot;Email&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>Email是我们注册Github时的邮箱</strong></p><p>然后会出现：</p><pre class="line-numbers language-none"><code class="language-none">Generating public&#x2F;private rsa key pair.Enter file in which to save the key (&#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa):&#x2F;&#x2F;到这里可以直接回车将密钥按默认文件进行存储<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>回车之后：</p><pre class="line-numbers language-none"><code class="language-none">Enter passphrase (empty for no passphrase):&#x2F;&#x2F;这里是要你输入密码，其实不需要输什么密码，直接回车就行Enter same passphrase again:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>接下来会有：</p><pre class="line-numbers language-none"><code class="language-none">Your identification has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.Your public key has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.pub.The key fingerprint is:这里是各种字母数字组成的字符串，结尾是你的邮箱The key&#39;s randomart image is:这里也是各种字母数字符号组成的字符串<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在密钥已经生成，一般存放在（/c/Users/you/.ssh/id_rsa.pub.），我们运行下面的命令将密钥复制为粘贴板：</p><pre class="line-numbers language-none"><code class="language-none">clip &lt; ~&#x2F;.ssh&#x2F;id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2021/01/11/FGz8qAbODEsSfti.png" alt="image-20210111212538215"></p><h2 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h2><p>在Github头像下面点击Settings，再点击SSH and GPG keys，新建一个SSH，名字任意。</p><p>然后将刚才复制的密钥添加就可以了，像这样：</p><p><img src="https://i.loli.net/2021/01/11/JZwLOSPWeG4MpCr.png" alt="image-20210111212701304"></p><p><strong>本地连接Github</strong></p><p>右键单击鼠标，点击 Git Bash Here输入以下命令，如果如下图所示，出现你的用户名，那就成功了</p><pre class="line-numbers language-none"><code class="language-none">ssh -T git@github.com&#x2F;&#x2F;注意不要做任何修改<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2021/01/11/JYnibqIWA3ed2kx.png" alt="image-20210111212935613"></p><p>打开博客根目录下的<code>_config.yml</code>文件，这是博客的配置文件，我们需要修改一下才能连接Github。</p><p><img src="https://i.loli.net/2021/01/11/Z8PokJyKAX6v9lB.png" alt="image-20210111213124756"></p><p>修改最后一行的配置：</p><pre class="line-numbers language-none"><code class="language-none"># Deployment\## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;one-command-deploymentdeploy: type: &#39;&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>改为：</p><pre class="line-numbers language-none"><code class="language-none"># Deployment\## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;one-command-deploymentdeploy: type: &#39;git&#39; repository: git@github.com:liusiyuan1111&#x2F;liusiyuan1111.github.io.git branch: master <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：</p><ul><li><strong>repository修改为你自己的github项目地址</strong>。</li><li><strong>每一个冒号后面都有一个空格。</strong></li></ul><p>直接部署一般会报如下错误：</p><pre class="line-numbers language-none"><code class="language-none">Deployer not found: git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这是因为缺少了一个插件，我们可以通过如下命令安装：</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后输入 <code>hexo d</code> 就会将本次有改动的代码全部提交。</p><h2 id="写文章、发布文章"><a href="#写文章、发布文章" class="headerlink" title="写文章、发布文章"></a>写文章、发布文章</h2><p>打开hexo安装目录，我的是D:\Blog\source_posts ，可以发现里面有一个<code>hello-world.md</code>的文件，可以把自己写的md文件直接放进来</p><p><img src="https://i.loli.net/2021/01/11/rgTiDvU6xfYMEqz.png" alt="image-20210111220734944"></p><p>然后hexo g生成静态网页，hexo s可以本地预览效果，最后hexo d部署到GitHub即可。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 搭建博客 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/01/11/hello-world/"/>
      <url>2021/01/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Hello World!</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=385322&auto=1&height=66"></iframe>]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
